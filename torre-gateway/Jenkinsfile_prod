node {
    def PORT = "7084:7084"
    def CONTAINER = "prod-torre-servicos-gateway"
    def service= "torre-gateway/"
    
    stage('Checkout') {
        git branch: '${branch}', credentialsId: "$GIT_GRUPO_MIRASSOL_CREDENTIALS", url: '$GIT_GRUPO_MIRASSOL_URL/tpo-backend.git';
    }
    
    stage('AcessoPasta') {
        nodejs('NodeJS') {
            sh 'cd torre-gateway/ ';
        }
    }
        
    stage('PreparaDockerfile') {
        nodejs('NodeJS') {
            sh ' cd torre-gateway/config && mv gateway.config_prod.yml gateway.config.yml ';
        }
    }

    stage('Build') {
        nodejs('NodeJS') {
            sh ' cd torre-gateway && npm install ';
        }
    }
 
    stage('DockerImage') {     
        sh "cd torre-gateway && docker build -f Dockerfile_prod -t ${CONTAINER} ."
        sh "cd torre-gateway && docker tag ${CONTAINER} $DOCKER_TAG:${CONTAINER}-${branch}";
    }
    
    try{
        stage('DockerStop') {
            sh "docker stop ${CONTAINER} && docker rm ${CONTAINER}";
        }
    }
    catch(e) {
        echo 'NÃ£o foi encontrado um container para parar';
    }
   
    stage('DockerRestart') {       
        sh " docker run -p ${PORT} -d --name ${CONTAINER} --log-opt max-size=100m --restart=always $DOCKER_TAG:${CONTAINER}-${branch}";
        sh " docker system prune -a -f";
    }   
}
